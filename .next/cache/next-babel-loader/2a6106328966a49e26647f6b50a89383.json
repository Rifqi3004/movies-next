{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macbook/Works/me/tes/movieaja/components/Genre/MenuGenre.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ItemMenuGenre from './ItemMenuGenre';\nimport { Grid, Link } from '@material-ui/core';\nimport { GetGenre, PostActiveGenre, GetMovieGenre } from '../../redux/actions/movie';\nimport axios from 'axios';\nvar data = [1, 2, 3];\n\nvar MenuGenre =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MenuGenre, _React$Component);\n\n  function MenuGenre(props) {\n    var _this;\n\n    _classCallCheck(this, MenuGenre);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MenuGenre).call(this, props));\n    _this.state = {\n      genres: []\n    };\n    return _this;\n  }\n\n  _createClass(MenuGenre, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(this.props.dispatch(GetGenre()));\n\n            case 2:\n              this.props.dispatch(GetMovieGenre(this.props.movie.activeGenre.id, 1));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"actionMenu\",\n    value: function actionMenu(genreId) {\n      this.props.dispatch(GetMovieGenre(genreId, 1));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$movie = this.props.movie,\n          activeGenre = _this$props$movie.activeGenre,\n          genre = _this$props$movie.genre;\n      return __jsx(React.Fragment, null, __jsx(Grid, {\n        container: true,\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, genre.length > 0 && genre.map(function (value) {\n        return __jsx(Grid, {\n          item: true,\n          key: value.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, __jsx(Link, {\n          color: \"inherit\",\n          underline: \"none\",\n          onClick: _this2.actionMenu(value.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, __jsx(ItemMenuGenre, {\n          title: value.name,\n          active: value.name === activeGenre.name ? true : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        })));\n      })));\n    }\n  }]);\n\n  return MenuGenre;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    movie: state.movie\n  };\n};\n\nexport default connect(mapStateToProps)(MenuGenre);","map":{"version":3,"sources":["/Users/macbook/Works/me/tes/movieaja/components/Genre/MenuGenre.js"],"names":["React","connect","ItemMenuGenre","Grid","Link","GetGenre","PostActiveGenre","GetMovieGenre","axios","data","MenuGenre","props","state","genres","dispatch","movie","activeGenre","id","genreId","genre","length","map","value","actionMenu","name","Component","mapStateToProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,IAAR,EAAcC,IAAd,QAAyB,mBAAzB;AACA,SAAQC,QAAR,EAAkBC,eAAlB,EAAmCC,aAAnC,QAAuD,2BAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,IAAI,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAX;;IACMC,S;;;;;AACF,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAG;AADA,KAAb;AAFc;AAKjB;;;;;;;;;;+CAES,KAAKF,KAAL,CAAWG,QAAX,CAAoBT,QAAQ,EAA5B,C;;;AACN,mBAAKM,KAAL,CAAWG,QAAX,CAAoBP,aAAa,CAAC,KAAKI,KAAL,CAAWI,KAAX,CAAiBC,WAAjB,CAA6BC,EAA9B,EAAiC,CAAjC,CAAjC;;;;;;;;;;;+BAEOC,O,EAAQ;AACf,WAAKP,KAAL,CAAWG,QAAX,CAAoBP,aAAa,CAACW,OAAD,EAAS,CAAT,CAAjC;AACH;;;6BACO;AAAA;;AAAA,8BACyB,KAAKP,KAAL,CAAWI,KADpC;AAAA,UACGC,WADH,qBACGA,WADH;AAAA,UACgBG,KADhB,qBACgBA,KADhB;AAGJ,aACI,4BACI,MAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAESA,KAAK,CAACC,MAAN,GAAe,CAAhB,IACAD,KAAK,CAACE,GAAN,CAAU,UAAAC,KAAK;AAAA,eACX,MAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,GAAG,EAAEA,KAAK,CAACL,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAC,SAAZ;AAAsB,UAAA,SAAS,EAAC,MAAhC;AAAuC,UAAA,OAAO,EAAE,MAAI,CAACM,UAAL,CAAgBD,KAAK,CAACL,EAAtB,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,aAAD;AAAe,UAAA,KAAK,EAAEK,KAAK,CAACE,IAA5B;AAAkC,UAAA,MAAM,EAAGF,KAAK,CAACE,IAAN,KAAeR,WAAW,CAACQ,IAA5B,GAAkC,IAAlC,GAAuC,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ,CADW;AAAA,OAAf,CAHR,CADJ,CADJ;AAgBH;;;;EAjCmBxB,KAAK,CAACyB,S;;AAoC9B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACd,KAAD;AAAA,SAAY;AAChCG,IAAAA,KAAK,EAAGH,KAAK,CAACG;AADkB,GAAZ;AAAA,CAAxB;;AAIA,eAAed,OAAO,CAACyB,eAAD,CAAP,CAAyBhB,SAAzB,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport ItemMenuGenre from './ItemMenuGenre'\nimport {Grid, Link} from '@material-ui/core'\nimport {GetGenre, PostActiveGenre, GetMovieGenre} from '../../redux/actions/movie'\nimport axios from 'axios'\n\nvar data = [1,2,3]\nclass MenuGenre extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            genres : []\n        }\n    }\n    async componentDidMount(){\n        await this.props.dispatch(GetGenre())\n        this.props.dispatch(GetMovieGenre(this.props.movie.activeGenre.id,1))\n    }\n    actionMenu(genreId){\n        this.props.dispatch(GetMovieGenre(genreId,1))\n    }\n    render(){\n        const {activeGenre, genre} = this.props.movie\n        \n        return (\n            <>\n                <Grid container spacing={2}>\n                    {\n                        (genre.length > 0) &&\n                        genre.map(value => (\n                            <Grid item key={value.id}>\n                                <Link color=\"inherit\" underline=\"none\" onClick={this.actionMenu(value.id)}>\n                                    <ItemMenuGenre title={value.name} active={(value.name === activeGenre.name)?true:false} />\n                                </Link>\n                            </Grid>\n                        ))\n                    }\n                </Grid>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    movie : state.movie\n})\n\nexport default connect(mapStateToProps)(MenuGenre)\n"]},"metadata":{},"sourceType":"module"}