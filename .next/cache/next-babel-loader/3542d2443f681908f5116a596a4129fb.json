{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Works/me/tes/movieaja/components/Genre/MenuGenre.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ItemMenuGenre from './ItemMenuGenre';\nimport { Grid } from '@material-ui/core';\nimport { GetGenre, PostActiveGenre, GetMovieGenre } from '../../redux/actions/movie';\nimport axios from 'axios';\nvar data = [1, 2, 3];\n\nclass MenuGenre extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      genres: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(GetGenre());\n\n    if (this.props.activeGenre !== '') {\n      this.props.dispatch(GetMovieGenre(this.props.movie.activeGenre.id, 1));\n    }\n  }\n\n  render() {\n    const {\n      activeGenre,\n      genre\n    } = this.props.movie;\n    return __jsx(React.Fragment, null, __jsx(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, genre.length > 0 && genre.map(value => __jsx(Grid, {\n      item: true,\n      key: value.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, __jsx(ItemMenuGenre, {\n      title: value.name,\n      active: value.name === activeGenre.name ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  movie: state.movie\n});\n\nexport default connect(mapStateToProps)(MenuGenre);","map":{"version":3,"sources":["/Users/macbook/Works/me/tes/movieaja/components/Genre/MenuGenre.js"],"names":["React","connect","ItemMenuGenre","Grid","GetGenre","PostActiveGenre","GetMovieGenre","axios","data","MenuGenre","Component","constructor","props","state","genres","componentDidMount","dispatch","activeGenre","movie","id","render","genre","length","map","value","name","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,SAAQC,QAAR,EAAkBC,eAAlB,EAAmCC,aAAnC,QAAuD,2BAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,IAAI,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAX;;AACA,MAAMC,SAAN,SAAwBT,KAAK,CAACU,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAG;AADA,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,SAAKH,KAAL,CAAWI,QAAX,CAAoBZ,QAAQ,EAA5B;;AACA,QAAG,KAAKQ,KAAL,CAAWK,WAAX,KAA2B,EAA9B,EAAiC;AAC7B,WAAKL,KAAL,CAAWI,QAAX,CAAoBV,aAAa,CAAC,KAAKM,KAAL,CAAWM,KAAX,CAAiBD,WAAjB,CAA6BE,EAA9B,EAAiC,CAAjC,CAAjC;AACH;AACJ;;AACDC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACH,MAAAA,WAAD;AAAcI,MAAAA;AAAd,QAAuB,KAAKT,KAAL,CAAWM,KAAxC;AACA,WACI,4BACI,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAESG,KAAK,CAACC,MAAN,GAAe,CAAhB,IACAD,KAAK,CAACE,GAAN,CAAUC,KAAK,IACX,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,GAAG,EAAEA,KAAK,CAACL,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,MAAC,aAAD;AAAe,MAAA,KAAK,EAAEK,KAAK,CAACC,IAA5B;AAAkC,MAAA,MAAM,EAAGD,KAAK,CAACC,IAAN,KAAeR,WAAW,CAACQ,IAA5B,GAAkC,IAAlC,GAAuC,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B,CADJ,CAHR,CADJ,CADJ;AAYH;;AA3BmC;;AA8BxC,MAAMC,eAAe,GAAIb,KAAD,KAAY;AAChCK,EAAAA,KAAK,EAAGL,KAAK,CAACK;AADkB,CAAZ,CAAxB;;AAIA,eAAejB,OAAO,CAACyB,eAAD,CAAP,CAAyBjB,SAAzB,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport ItemMenuGenre from './ItemMenuGenre'\nimport {Grid} from '@material-ui/core'\nimport {GetGenre, PostActiveGenre, GetMovieGenre} from '../../redux/actions/movie'\nimport axios from 'axios'\n\nvar data = [1,2,3]\nclass MenuGenre extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            genres : []\n        }\n    }\n    componentDidMount(){\n        this.props.dispatch(GetGenre())\n        if(this.props.activeGenre !== ''){\n            this.props.dispatch(GetMovieGenre(this.props.movie.activeGenre.id,1))\n        }\n    }\n    render(){\n        const {activeGenre, genre} = this.props.movie\n        return (\n            <>\n                <Grid container spacing={2}>\n                    {\n                        (genre.length > 0) &&\n                        genre.map(value => (\n                            <Grid item key={value.id}><ItemMenuGenre title={value.name} active={(value.name === activeGenre.name)?true:false} /></Grid>\n                        ))\n                    }\n                </Grid>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    movie : state.movie\n})\n\nexport default connect(mapStateToProps)(MenuGenre)\n"]},"metadata":{},"sourceType":"module"}