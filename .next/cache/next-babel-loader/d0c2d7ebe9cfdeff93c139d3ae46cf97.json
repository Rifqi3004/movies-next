{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_GENRE, POST_ACTIVE_GENRE, GET_MOVIE_GENRE } from '../constan/movie';\nconst initialState = {\n  genre: [],\n  movie: [],\n  moviesGenre: '',\n  movies: [],\n  activeGenre: '',\n  isLoading: false,\n  isFinish: false,\n  isError: false\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    //get genre\n    case GET_GENRE + '_PENDING':\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case GET_GENRE + '_FULFILLED':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        isFinish: true,\n        genre: action.payload.data.genres,\n        activeGenre: action.payload.data.genres[0]\n      });\n\n    case GET_GENRE + '_REJECTED':\n      return _objectSpread({}, state, {\n        isError: true\n      });\n    //post active Genre\n\n    case POST_ACTIVE_GENRE + '_PENDING':\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case POST_ACTIVE_GENRE + '_FULFILLED':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        isFinish: true,\n        activeGenre: action.payload\n      });\n\n    case POST_ACTIVE_GENRE + '_REJECTED':\n      return _objectSpread({}, state, {\n        isError: true\n      });\n    //get movie genre\n\n    case GET_MOVIE_GENRE + '_PENDING':\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case GET_MOVIE_GENRE + '_FULFILLED':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        isFinish: true,\n        moviesGenre: action.payload.data\n      });\n\n    case GET_MOVIE_GENRE + '_REJECTED':\n      return _objectSpread({}, state, {\n        isError: true\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/macbook/Works/me/tes/movieaja/redux/reducers/movie.js"],"names":["GET_GENRE","POST_ACTIVE_GENRE","GET_MOVIE_GENRE","initialState","genre","movie","moviesGenre","movies","activeGenre","isLoading","isFinish","isError","state","action","type","payload","data","genres"],"mappings":";;;;;;;;;;;;AAAA,SAAQA,SAAR,EAAmBC,iBAAnB,EAAsCC,eAAtC,QAA4D,kBAA5D;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAG,EADS;AAEjBC,EAAAA,KAAK,EAAG,EAFS;AAGjBC,EAAAA,WAAW,EAAG,EAHG;AAIjBC,EAAAA,MAAM,EAAG,EAJQ;AAKjBC,EAAAA,WAAW,EAAG,EALG;AAMjBC,EAAAA,SAAS,EAAG,KANK;AAOjBC,EAAAA,QAAQ,EAAG,KAPM;AAQjBC,EAAAA,OAAO,EAAG;AARO,CAArB;AAWA,gBAAe,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKd,SAAS,GAAC,UAAf;AACA,+BACKY,KADL;AACYH,QAAAA,SAAS,EAAG;AADxB;;AAIA,SAAKT,SAAS,GAAC,YAAf;AACI,+BACGY,KADH;AACUH,QAAAA,SAAS,EAAG,KADtB;AAC6BC,QAAAA,QAAQ,EAAG,IADxC;AAEAN,QAAAA,KAAK,EAAGS,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBC,MAF5B;AAGAT,QAAAA,WAAW,EAAGK,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,CAA3B;AAHd;;AAMJ,SAAKjB,SAAS,GAAC,WAAf;AACI,+BACGY,KADH;AACUD,QAAAA,OAAO,EAAG;AADpB;AAKJ;;AACA,SAAKV,iBAAiB,GAAC,UAAvB;AACA,+BACKW,KADL;AACYH,QAAAA,SAAS,EAAG;AADxB;;AAIA,SAAKR,iBAAiB,GAAC,YAAvB;AACI,+BACGW,KADH;AACUH,QAAAA,SAAS,EAAG,KADtB;AAC6BC,QAAAA,QAAQ,EAAG,IADxC;AAEAF,QAAAA,WAAW,EAAGK,MAAM,CAACE;AAFrB;;AAKJ,SAAKd,iBAAiB,GAAC,WAAvB;AACI,+BACGW,KADH;AACUD,QAAAA,OAAO,EAAG;AADpB;AAKJ;;AAEA,SAAKT,eAAe,GAAC,UAArB;AACA,+BACKU,KADL;AACYH,QAAAA,SAAS,EAAG;AADxB;;AAIA,SAAKP,eAAe,GAAC,YAArB;AACI,+BACGU,KADH;AACUH,QAAAA,SAAS,EAAG,KADtB;AAC6BC,QAAAA,QAAQ,EAAG,IADxC;AAEAJ,QAAAA,WAAW,EAAGO,MAAM,CAACE,OAAP,CAAeC;AAF7B;;AAKJ,SAAKd,eAAe,GAAC,WAArB;AACI,+BACGU,KADH;AACUD,QAAAA,OAAO,EAAG;AADpB;;AAOJ;AACE,aAAOC,KAAP;AA5DJ;AA8DD,CA/DD","sourcesContent":["import {GET_GENRE, POST_ACTIVE_GENRE, GET_MOVIE_GENRE} from '../constan/movie'\n\nconst initialState = {\n    genre : [],\n    movie : [],\n    moviesGenre : '',\n    movies : [],\n    activeGenre : '',\n    isLoading : false,\n    isFinish : false,\n    isError : false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    //get genre\n    case GET_GENRE+'_PENDING' : \n    return {\n      ...state, isLoading : true\n    }\n\n    case GET_GENRE+'_FULFILLED' : \n        return {\n        ...state, isLoading : false, isFinish : true,\n        genre : action.payload.data.genres,\n        activeGenre : action.payload.data.genres[0]\n    }\n\n    case GET_GENRE+'_REJECTED' : \n        return {\n        ...state, isError : true,\n\n        }\n\n    //post active Genre\n    case POST_ACTIVE_GENRE+'_PENDING' : \n    return {\n      ...state, isLoading : true\n    }\n\n    case POST_ACTIVE_GENRE+'_FULFILLED' : \n        return {\n        ...state, isLoading : false, isFinish : true,\n        activeGenre : action.payload\n    }\n\n    case POST_ACTIVE_GENRE+'_REJECTED' : \n        return {\n        ...state, isError : true,\n\n        }\n\n    //get movie genre\n\n    case GET_MOVIE_GENRE+'_PENDING' : \n    return {\n      ...state, isLoading : true\n    }\n\n    case GET_MOVIE_GENRE+'_FULFILLED' : \n        return {\n        ...state, isLoading : false, isFinish : true,\n        moviesGenre : action.payload.data\n    }\n\n    case GET_MOVIE_GENRE+'_REJECTED' : \n        return {\n        ...state, isError : true,\n\n        }\n    \n    \n   \n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}