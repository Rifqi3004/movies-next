{"version":3,"file":"static/webpack/static/development/pages/_app.js.e54a5f3fb5b6a354cbcc.hot-update.js","sources":["webpack:///./redux/store.js"],"sourcesContent":["import {  createStore } from 'redux'\nimport reducers from \"./reducers\"\nimport middlewares from './middlewares';\n\nexport const initStore = (reducers, initialState) => {\n    return createStore(reducers, initialState, middlewares);\n\n};\n\nexport const makeStore = (initialState, {isServer, req, debug, storeKey}) => {\n\n    if (isServer) {\n\n        initialState = initialState || {fromServer: 'foo'};\n\n        return initStore(reducers, initialState);\n\n    } else {\n\n        // we need it only on client side\n        const {persistStore, persistReducer} = require('redux-persist')\n        const storage = require('redux-persist/lib/storage').default;\n\n        const persistConfig = {\n            key: 'nextjs',\n            whitelist: ['auth','movie'],\n            storage\n        };\n\n        const persistedReducer = persistReducer(persistConfig, reducers);\n        const store = initStore(persistedReducer, initialState);\n\n        store.__persistor = persistStore(store); // Nasty hack\n\n        return store;\n    }\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAEA;AAEA;AAFA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}